"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("react");

var _axios = _interopRequireDefault(require("axios"));

var _2 = require("..");

var _useStaticInfo = require("./useStaticInfo");

//
// This will likely become a react cache resource soon
var siteDataPromise;
var siteDataReady;
var siteData;

var useSiteData = function useSiteData() {
  // When clientData reloads, rerender components
  // that use this hook
  // eslint-disable-next-line
  var _useState = (0, _react.useState)(0),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      _ = _useState2[0],
      setCount = _useState2[1];

  (0, _react.useEffect)(function () {
    return (0, _2.onReloadClientData)(function () {
      siteDataPromise = null;
      siteDataReady = false;
      setCount(function (old) {
        return old + 1;
      });
    });
  });
  var staticInfo = (0, _useStaticInfo.useStaticInfo)();

  if (staticInfo) {
    return staticInfo.siteData;
  }

  if (siteDataReady) {
    return siteData;
  }

  if (!siteDataPromise) {
    // Request the site data
    siteDataPromise = _axios["default"].get('/__react-static__/siteData').then(function (_ref) {
      var data = _ref.data;
      siteDataReady = true;
      siteData = data;
    });
  } // Throw the promise


  throw siteDataPromise;
};

var _default = useSiteData;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9icm93c2VyL2hvb2tzL3VzZVNpdGVEYXRhLmpzIl0sIm5hbWVzIjpbInNpdGVEYXRhUHJvbWlzZSIsInNpdGVEYXRhUmVhZHkiLCJzaXRlRGF0YSIsInVzZVNpdGVEYXRhIiwiXyIsInNldENvdW50Iiwib2xkIiwic3RhdGljSW5mbyIsImF4aW9zIiwiZ2V0IiwidGhlbiIsImRhdGEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBRkE7QUFJQTtBQUNBLElBQUlBLGVBQUo7QUFDQSxJQUFJQyxhQUFKO0FBQ0EsSUFBSUMsUUFBSjs7QUFFQSxJQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxHQUFNO0FBQ3hCO0FBQ0E7QUFDQTtBQUh3QixrQkFJRixxQkFBUyxDQUFULENBSkU7QUFBQTtBQUFBLE1BSWpCQyxDQUppQjtBQUFBLE1BSWRDLFFBSmM7O0FBS3hCLHdCQUFVO0FBQUEsV0FDUiwyQkFBbUIsWUFBTTtBQUN2QkwsTUFBQUEsZUFBZSxHQUFHLElBQWxCO0FBQ0FDLE1BQUFBLGFBQWEsR0FBRyxLQUFoQjtBQUNBSSxNQUFBQSxRQUFRLENBQUMsVUFBQUMsR0FBRztBQUFBLGVBQUlBLEdBQUcsR0FBRyxDQUFWO0FBQUEsT0FBSixDQUFSO0FBQ0QsS0FKRCxDQURRO0FBQUEsR0FBVjtBQVFBLE1BQU1DLFVBQVUsR0FBRyxtQ0FBbkI7O0FBRUEsTUFBSUEsVUFBSixFQUFnQjtBQUNkLFdBQU9BLFVBQVUsQ0FBQ0wsUUFBbEI7QUFDRDs7QUFFRCxNQUFJRCxhQUFKLEVBQW1CO0FBQ2pCLFdBQU9DLFFBQVA7QUFDRDs7QUFFRCxNQUFJLENBQUNGLGVBQUwsRUFBc0I7QUFDcEI7QUFDQUEsSUFBQUEsZUFBZSxHQUFHUSxrQkFDZkMsR0FEZSxDQUNYLDRCQURXLEVBRWZDLElBRmUsQ0FFVixnQkFBYztBQUFBLFVBQVhDLElBQVcsUUFBWEEsSUFBVztBQUNsQlYsTUFBQUEsYUFBYSxHQUFHLElBQWhCO0FBQ0FDLE1BQUFBLFFBQVEsR0FBR1MsSUFBWDtBQUNELEtBTGUsQ0FBbEI7QUFNRCxHQS9CdUIsQ0FpQ3hCOzs7QUFDQSxRQUFNWCxlQUFOO0FBQ0QsQ0FuQ0Q7O2VBcUNlRyxXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnXHJcbi8vXHJcbmltcG9ydCB7IG9uUmVsb2FkQ2xpZW50RGF0YSB9IGZyb20gJy4uJ1xyXG5pbXBvcnQgeyB1c2VTdGF0aWNJbmZvIH0gZnJvbSAnLi91c2VTdGF0aWNJbmZvJ1xyXG5cclxuLy8gVGhpcyB3aWxsIGxpa2VseSBiZWNvbWUgYSByZWFjdCBjYWNoZSByZXNvdXJjZSBzb29uXHJcbmxldCBzaXRlRGF0YVByb21pc2VcclxubGV0IHNpdGVEYXRhUmVhZHlcclxubGV0IHNpdGVEYXRhXHJcblxyXG5jb25zdCB1c2VTaXRlRGF0YSA9ICgpID0+IHtcclxuICAvLyBXaGVuIGNsaWVudERhdGEgcmVsb2FkcywgcmVyZW5kZXIgY29tcG9uZW50c1xyXG4gIC8vIHRoYXQgdXNlIHRoaXMgaG9va1xyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxyXG4gIGNvbnN0IFtfLCBzZXRDb3VudF0gPSB1c2VTdGF0ZSgwKVxyXG4gIHVzZUVmZmVjdCgoKSA9PlxyXG4gICAgb25SZWxvYWRDbGllbnREYXRhKCgpID0+IHtcclxuICAgICAgc2l0ZURhdGFQcm9taXNlID0gbnVsbFxyXG4gICAgICBzaXRlRGF0YVJlYWR5ID0gZmFsc2VcclxuICAgICAgc2V0Q291bnQob2xkID0+IG9sZCArIDEpXHJcbiAgICB9KVxyXG4gIClcclxuXHJcbiAgY29uc3Qgc3RhdGljSW5mbyA9IHVzZVN0YXRpY0luZm8oKVxyXG5cclxuICBpZiAoc3RhdGljSW5mbykge1xyXG4gICAgcmV0dXJuIHN0YXRpY0luZm8uc2l0ZURhdGFcclxuICB9XHJcblxyXG4gIGlmIChzaXRlRGF0YVJlYWR5KSB7XHJcbiAgICByZXR1cm4gc2l0ZURhdGFcclxuICB9XHJcblxyXG4gIGlmICghc2l0ZURhdGFQcm9taXNlKSB7XHJcbiAgICAvLyBSZXF1ZXN0IHRoZSBzaXRlIGRhdGFcclxuICAgIHNpdGVEYXRhUHJvbWlzZSA9IGF4aW9zXHJcbiAgICAgIC5nZXQoJy9fX3JlYWN0LXN0YXRpY19fL3NpdGVEYXRhJylcclxuICAgICAgLnRoZW4oKHsgZGF0YSB9KSA9PiB7XHJcbiAgICAgICAgc2l0ZURhdGFSZWFkeSA9IHRydWVcclxuICAgICAgICBzaXRlRGF0YSA9IGRhdGFcclxuICAgICAgfSlcclxuICB9XHJcblxyXG4gIC8vIFRocm93IHRoZSBwcm9taXNlXHJcbiAgdGhyb3cgc2l0ZURhdGFQcm9taXNlXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVzZVNpdGVEYXRhXHJcbiJdfQ==