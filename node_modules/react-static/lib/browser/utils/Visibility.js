"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = onVisible;

if (typeof document !== 'undefined') {
  // Polyfill that shiz!
  require('intersection-observer'); // Do manual polling for intersections every second. This isn't very fast
  // but should handle most edge cases for now


  IntersectionObserver.POLL_INTERVAL = 1000;
}

var list = new Map();

function onVisible(element, callback) {
  if (list.get(element)) {
    return;
  }

  var io = new window.IntersectionObserver(function (entries) {
    entries.forEach(function (entry) {
      // Edge doesn't support isIntersecting. intersectionRatio > 0 works as a fallback
      if (element === entry.target && (entry.isIntersecting || entry.intersectionRatio > 0)) {
        io.unobserve(element);
        io.disconnect();
        callback();
      }
    });
  });
  io.observe(element);
  list.set(element, true);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9icm93c2VyL3V0aWxzL1Zpc2liaWxpdHkuanMiXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJyZXF1aXJlIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJQT0xMX0lOVEVSVkFMIiwibGlzdCIsIk1hcCIsIm9uVmlzaWJsZSIsImVsZW1lbnQiLCJjYWxsYmFjayIsImdldCIsImlvIiwid2luZG93IiwiZW50cmllcyIsImZvckVhY2giLCJlbnRyeSIsInRhcmdldCIsImlzSW50ZXJzZWN0aW5nIiwiaW50ZXJzZWN0aW9uUmF0aW8iLCJ1bm9ic2VydmUiLCJkaXNjb25uZWN0Iiwib2JzZXJ2ZSIsInNldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUksT0FBT0EsUUFBUCxLQUFvQixXQUF4QixFQUFxQztBQUNuQztBQUNBQyxFQUFBQSxPQUFPLENBQUMsdUJBQUQsQ0FBUCxDQUZtQyxDQUluQztBQUNBOzs7QUFDQUMsRUFBQUEsb0JBQW9CLENBQUNDLGFBQXJCLEdBQXFDLElBQXJDO0FBQ0Q7O0FBRUQsSUFBTUMsSUFBSSxHQUFHLElBQUlDLEdBQUosRUFBYjs7QUFFZSxTQUFTQyxTQUFULENBQW1CQyxPQUFuQixFQUE0QkMsUUFBNUIsRUFBc0M7QUFDbkQsTUFBSUosSUFBSSxDQUFDSyxHQUFMLENBQVNGLE9BQVQsQ0FBSixFQUF1QjtBQUNyQjtBQUNEOztBQUNELE1BQU1HLEVBQUUsR0FBRyxJQUFJQyxNQUFNLENBQUNULG9CQUFYLENBQWdDLFVBQUFVLE9BQU8sRUFBSTtBQUNwREEsSUFBQUEsT0FBTyxDQUFDQyxPQUFSLENBQWdCLFVBQUFDLEtBQUssRUFBSTtBQUN2QjtBQUNBLFVBQ0VQLE9BQU8sS0FBS08sS0FBSyxDQUFDQyxNQUFsQixLQUNDRCxLQUFLLENBQUNFLGNBQU4sSUFBd0JGLEtBQUssQ0FBQ0csaUJBQU4sR0FBMEIsQ0FEbkQsQ0FERixFQUdFO0FBQ0FQLFFBQUFBLEVBQUUsQ0FBQ1EsU0FBSCxDQUFhWCxPQUFiO0FBQ0FHLFFBQUFBLEVBQUUsQ0FBQ1MsVUFBSDtBQUVBWCxRQUFBQSxRQUFRO0FBQ1Q7QUFDRixLQVhEO0FBWUQsR0FiVSxDQUFYO0FBY0FFLEVBQUFBLEVBQUUsQ0FBQ1UsT0FBSCxDQUFXYixPQUFYO0FBQ0FILEVBQUFBLElBQUksQ0FBQ2lCLEdBQUwsQ0FBU2QsT0FBVCxFQUFrQixJQUFsQjtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAvLyBQb2x5ZmlsbCB0aGF0IHNoaXohXHJcbiAgcmVxdWlyZSgnaW50ZXJzZWN0aW9uLW9ic2VydmVyJylcclxuXHJcbiAgLy8gRG8gbWFudWFsIHBvbGxpbmcgZm9yIGludGVyc2VjdGlvbnMgZXZlcnkgc2Vjb25kLiBUaGlzIGlzbid0IHZlcnkgZmFzdFxyXG4gIC8vIGJ1dCBzaG91bGQgaGFuZGxlIG1vc3QgZWRnZSBjYXNlcyBmb3Igbm93XHJcbiAgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIuUE9MTF9JTlRFUlZBTCA9IDEwMDBcclxufVxyXG5cclxuY29uc3QgbGlzdCA9IG5ldyBNYXAoKVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gb25WaXNpYmxlKGVsZW1lbnQsIGNhbGxiYWNrKSB7XHJcbiAgaWYgKGxpc3QuZ2V0KGVsZW1lbnQpKSB7XHJcbiAgICByZXR1cm5cclxuICB9XHJcbiAgY29uc3QgaW8gPSBuZXcgd2luZG93LkludGVyc2VjdGlvbk9ic2VydmVyKGVudHJpZXMgPT4ge1xyXG4gICAgZW50cmllcy5mb3JFYWNoKGVudHJ5ID0+IHtcclxuICAgICAgLy8gRWRnZSBkb2Vzbid0IHN1cHBvcnQgaXNJbnRlcnNlY3RpbmcuIGludGVyc2VjdGlvblJhdGlvID4gMCB3b3JrcyBhcyBhIGZhbGxiYWNrXHJcbiAgICAgIGlmIChcclxuICAgICAgICBlbGVtZW50ID09PSBlbnRyeS50YXJnZXQgJiZcclxuICAgICAgICAoZW50cnkuaXNJbnRlcnNlY3RpbmcgfHwgZW50cnkuaW50ZXJzZWN0aW9uUmF0aW8gPiAwKVxyXG4gICAgICApIHtcclxuICAgICAgICBpby51bm9ic2VydmUoZWxlbWVudClcclxuICAgICAgICBpby5kaXNjb25uZWN0KClcclxuXHJcbiAgICAgICAgY2FsbGJhY2soKVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gIH0pXHJcbiAgaW8ub2JzZXJ2ZShlbGVtZW50KVxyXG4gIGxpc3Quc2V0KGVsZW1lbnQsIHRydWUpXHJcbn1cclxuIl19