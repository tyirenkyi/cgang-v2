"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = makeWebpackConfig;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _rules = require("./rules");

var _plugins = _interopRequireDefault(require("../plugins"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

// Builds a compiler using a stage preset, then allows extension via
// webpackConfigurator
function makeWebpackConfig(state) {
  var _state = state,
      stage = _state.stage;
  var webpackConfig;

  if (stage === 'dev') {
    webpackConfig = require('./webpack.config.dev')["default"](state);
  } else if (['prod', 'node'].includes(stage)) {
    webpackConfig = require('./webpack.config.prod')["default"](state);
  } else {
    throw new Error("An invalid stage option was detected: ".concat(stage.toString(), ". Stage must equal one of: 'prod', 'dev', or 'node'."));
  } // set the default loaders


  state = _objectSpread({}, state, {
    defaultLoaders: (0, _rules.getStagedRules)(state) // run the webpack plugin (should be synchronous)

  });
  webpackConfig = _plugins["default"].webpack(webpackConfig, state);
  return webpackConfig;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdGF0aWMvd2VicGFjay9tYWtlV2VicGFja0NvbmZpZy5qcyJdLCJuYW1lcyI6WyJtYWtlV2VicGFja0NvbmZpZyIsInN0YXRlIiwic3RhZ2UiLCJ3ZWJwYWNrQ29uZmlnIiwicmVxdWlyZSIsImluY2x1ZGVzIiwiRXJyb3IiLCJ0b1N0cmluZyIsImRlZmF1bHRMb2FkZXJzIiwicGx1Z2lucyIsIndlYnBhY2siXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7OztBQUVBO0FBQ0E7QUFDZSxTQUFTQSxpQkFBVCxDQUEyQkMsS0FBM0IsRUFBa0M7QUFBQSxlQUM3QkEsS0FENkI7QUFBQSxNQUN2Q0MsS0FEdUMsVUFDdkNBLEtBRHVDO0FBRy9DLE1BQUlDLGFBQUo7O0FBRUEsTUFBSUQsS0FBSyxLQUFLLEtBQWQsRUFBcUI7QUFDbkJDLElBQUFBLGFBQWEsR0FBR0MsT0FBTyxDQUFDLHNCQUFELENBQVAsWUFBd0NILEtBQXhDLENBQWhCO0FBQ0QsR0FGRCxNQUVPLElBQUksQ0FBQyxNQUFELEVBQVMsTUFBVCxFQUFpQkksUUFBakIsQ0FBMEJILEtBQTFCLENBQUosRUFBc0M7QUFDM0NDLElBQUFBLGFBQWEsR0FBR0MsT0FBTyxDQUFDLHVCQUFELENBQVAsWUFBeUNILEtBQXpDLENBQWhCO0FBQ0QsR0FGTSxNQUVBO0FBQ0wsVUFBTSxJQUFJSyxLQUFKLGlEQUNxQ0osS0FBSyxDQUFDSyxRQUFOLEVBRHJDLDBEQUFOO0FBR0QsR0FiOEMsQ0FlL0M7OztBQUNBTixFQUFBQSxLQUFLLHFCQUNBQSxLQURBO0FBRUhPLElBQUFBLGNBQWMsRUFBRSwyQkFBZVAsS0FBZixDQUZiLENBS0w7O0FBTEssSUFBTDtBQU1BRSxFQUFBQSxhQUFhLEdBQUdNLG9CQUFRQyxPQUFSLENBQWdCUCxhQUFoQixFQUErQkYsS0FBL0IsQ0FBaEI7QUFFQSxTQUFPRSxhQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRTdGFnZWRSdWxlcyB9IGZyb20gJy4vcnVsZXMnXHJcbmltcG9ydCBwbHVnaW5zIGZyb20gJy4uL3BsdWdpbnMnXHJcblxyXG4vLyBCdWlsZHMgYSBjb21waWxlciB1c2luZyBhIHN0YWdlIHByZXNldCwgdGhlbiBhbGxvd3MgZXh0ZW5zaW9uIHZpYVxyXG4vLyB3ZWJwYWNrQ29uZmlndXJhdG9yXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1ha2VXZWJwYWNrQ29uZmlnKHN0YXRlKSB7XHJcbiAgY29uc3QgeyBzdGFnZSB9ID0gc3RhdGVcclxuXHJcbiAgbGV0IHdlYnBhY2tDb25maWdcclxuXHJcbiAgaWYgKHN0YWdlID09PSAnZGV2Jykge1xyXG4gICAgd2VicGFja0NvbmZpZyA9IHJlcXVpcmUoJy4vd2VicGFjay5jb25maWcuZGV2JykuZGVmYXVsdChzdGF0ZSlcclxuICB9IGVsc2UgaWYgKFsncHJvZCcsICdub2RlJ10uaW5jbHVkZXMoc3RhZ2UpKSB7XHJcbiAgICB3ZWJwYWNrQ29uZmlnID0gcmVxdWlyZSgnLi93ZWJwYWNrLmNvbmZpZy5wcm9kJykuZGVmYXVsdChzdGF0ZSlcclxuICB9IGVsc2Uge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICBgQW4gaW52YWxpZCBzdGFnZSBvcHRpb24gd2FzIGRldGVjdGVkOiAke3N0YWdlLnRvU3RyaW5nKCl9LiBTdGFnZSBtdXN0IGVxdWFsIG9uZSBvZjogJ3Byb2QnLCAnZGV2Jywgb3IgJ25vZGUnLmBcclxuICAgIClcclxuICB9XHJcblxyXG4gIC8vIHNldCB0aGUgZGVmYXVsdCBsb2FkZXJzXHJcbiAgc3RhdGUgPSB7XHJcbiAgICAuLi5zdGF0ZSxcclxuICAgIGRlZmF1bHRMb2FkZXJzOiBnZXRTdGFnZWRSdWxlcyhzdGF0ZSksXHJcbiAgfVxyXG5cclxuICAvLyBydW4gdGhlIHdlYnBhY2sgcGx1Z2luIChzaG91bGQgYmUgc3luY2hyb25vdXMpXHJcbiAgd2VicGFja0NvbmZpZyA9IHBsdWdpbnMud2VicGFjayh3ZWJwYWNrQ29uZmlnLCBzdGF0ZSlcclxuXHJcbiAgcmV0dXJuIHdlYnBhY2tDb25maWdcclxufVxyXG4iXX0=